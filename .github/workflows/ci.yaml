name: CI with Docker and MongoDB

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create .env file from GitHub Secrets
        run: |
          echo "NODE_ENV=test" >> .env
          echo "PORT=5000" >> .env
          echo "HASHING_SALT=${{ secrets.HASHING_SALT }}" >> .env
          echo "JWT_ACCESS_TOKEN_SECRET=${{ secrets.JWT_ACCESS_TOKEN_SECRET }}" >> .env
          echo "JWT_REFRESH_TOKEN_SECRET=${{ secrets.JWT_REFRESH_TOKEN_SECRET }}" >> .env
          echo "JWT_ACCESS_TOKEN_EXPIRY=${{ secrets.JWT_ACCESS_TOKEN_EXPIRY }}" >> .env
          echo "JWT_REFRESH_TOKEN_EXPIRY=${{ secrets.JWT_REFRESH_TOKEN_EXPIRY }}" >> .env

      - name: Run Docker Compose
        run: docker compose up --abort-on-container-exit --exit-code-from app

      - name: Notify Slack (On Failure)
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"❌ CI Failed for '${{ github.repository }}' on branch '${{ github.ref_name }}'. Commit: ${{ github.sha }}"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack (On Success)
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"✅ CI Passed for '${{ github.repository }}' on branch '${{ github.ref_name }}'. Commit: ${{ github.sha }}"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}
